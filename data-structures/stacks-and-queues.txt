#Exercises

>For exercises requiring code, you are free to use the language of your choice.

>Provide all the code and written answers in a file named stacks_and_queues.txt:

1. What is the main difference between a stack and a queue?

A stack is a data type that is a collection of elements in which the last element to join the stack is the first to be removed/leave (Last In First Out). A queue is a data type in which elements are kept in an order similar to lines we wait in as humans- first element in line is first out of line (FIFO).

2. What are the similarities between stacks and queues?

Both are data types that allow developers to rank tasks, create an order of operations for handling the tasks, and support system functions.

3. Imagine you are an engineer tasked with implementing the UNDO and REDO options in a word processor such as Microsoft Word. Which data structure would you use for each option and why?

In this case, I would use the stack data structure because I would want to undo or redo the latest thing I did, or at the very least, one of the most recent things I did on the document. This would follow the LIFO order.

#Programming Questions
>You may program the following question in any language of your choice. Before you begin coding, write out a plan as to how you will solve the question.

1. Given a string, reverse it using a stack. For example, the string "Bloc!" should be converted to "!colB".

```
function reverseString(string){
  var newString = [];
  for (var i =0; i <= string.length; i++){
  newString.push(string.charAt(string.length-i));
  }
  return newString.join('');
  }
console.log(reverseString("Bloc!"));
```

2. Implement the delete functionality of a stack using one queue. Make a FIFO data structure mirror the functionality of a LIFO data structure.

â€”To delete an item, take all of the elements in the queue one at a time and put them at the end of the queue, except for the last one which should be deleted and returned.

CLASS Stack
 FUNCTION pop(queue)
   ENTER queue array
   CALL deleteElement function
   FOR LOOP through elements in queue array
   PUSH elements
   CALL pop function on array to delete last element
   RETURN new array
 END FUNCTION
END CLASS

3. Fill in the methods for the following Queue class so that it will work as expected (FIFO).

CLASS QUEUE
 FUNCTION enqueue(element)
  PUSH elements
 END FUNCTION

 FUNCTION dequeue
   SHIFT elements
 END FUNCTION
END CLASS
```